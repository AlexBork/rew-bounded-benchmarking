pomdp

// Constants that should technically be changeable (changeability of N might depend on map description)
const int N = 5;
const double slippery = 0.5;

// General stuff
const int xMIN = 0;
const int xMAX = N-1;
const int yMIN = 0;
const int yMAX = N-1;

// Enabledness of directions
formula northenabled = y != yMAX;
formula eastenabled = x != xMAX;
formula southenabled = y != yMIN;
formula westenabled = x != xMIN;

// Location of goal
formula goal = (x = xMAX) & (y = yMAX);


// Uphill / downhill formulas
// Can be changed to model different "maps"
// This is map 2 (middle highest, steps down toward outside)

const double MP = (N-1)/2;

formula northuphill = (y < floor(MP)) & (x < 2*MP - y) & (x > y);
formula northdownhill = (y >= MP) & (y < yMAX) & (x <= y) & (x >= 2*MP - y);

formula eastuphill = (x < floor(MP)) & (y < 2*MP - x) & (y > x);
formula eastdownhill = (x >= MP) & (x < xMAX) & (y <= x) & (y >= 2*MP -x);

formula southuphill = (y > ceil(MP)) & (x < y) & (x > 2*MP - y);
formula southdownhill = (y <= MP) & (y > yMIN) & (x <= 2*MP - y) & (x >= y);

formula westuphill = (x > ceil(MP)) & (y < x) & (y > 2*MP - x);
formula westdownhill = (x <= MP) & (x > xMIN) & (y <= 2*MP - x) & (y >= x);


// Observables
observable "done" = goal;

observable "cangonorth" = northenabled;
observable "cangoeast" = eastenabled;
observable "cangosouth" = southenabled;
observable "cangowest" = westenabled;

module walker
  x : [xMIN..xMAX] init xMIN; // x coordinate, min is west, max is east
  y : [yMIN..yMAX] init yMIN; // y coordinate, min is south, max is north

  // Moving around (uphill: chance to stay in place, downhill: chance to slip too far)

  [north] northenabled & northuphill & !northdownhill -> slippery: (y'=y) + (1-slippery): (y'=min(y+1, yMAX));
  [north] northenabled & northdownhill & !northuphill -> slippery: (y'=min(y+2, yMAX)) + (1-slippery): (y'=min(y+1, yMAX));
  [north] northenabled & !northuphill & !northdownhill -> 1: (y'=min(y+1, yMAX));

  [east] eastenabled & eastuphill & !eastdownhill -> slippery: (x'=x) + (1-slippery): (x'=min(x+1, xMAX));
  [east] eastenabled & eastdownhill & !eastuphill -> slippery: (x'=min(x+2, xMAX)) + (1-slippery): (x'=min(x+1, xMAX));
  [east] eastenabled & !eastuphill & !eastdownhill -> 1: (x'=min(x+1, xMAX));

  [south] southenabled & southuphill & !southdownhill -> slippery: (y'=y) + (1-slippery): (y'=max(y-1, yMIN));
  [south] southenabled & southdownhill & !southuphill -> slippery: (y'=max(y-2, yMIN)) + (1-slippery): (y'=max(y-1, yMIN));
  [south] southenabled & !southuphill & !southdownhill -> 1: (y'=max(y-1, yMIN));

  [west] westenabled & westuphill & !westdownhill -> slippery: (x'=x) + (1-slippery): (x'=max(x-1, xMIN));
  [west] westenabled & westdownhill & !westuphill -> slippery: (x'=max(x-2, xMIN)) + (1-slippery): (x'=max(x-1, xMIN));
  [west] westenabled & !westuphill & !westdownhill -> 1: (x'=max(x-1, xMIN));
endmodule


// Rewards

rewards "steps"
  [north] true : 1;
  [east] true : 1;
  [south] true : 1;
  [west] true : 1;
endrewards

rewards "energy"
  [north] northenabled & northuphill & !northdownhill : 3;
  [north] northenabled & northdownhill & !northuphill : 1;
  [north] northenabled & !northuphill & !northdownhill : 2;

  [east] eastenabled & eastuphill & !eastdownhill : 3;
  [east] eastenabled & eastdownhill & !eastuphill : 1;
  [east] eastenabled & !eastuphill & !eastdownhill : 2;

  [south] southenabled & southuphill & !southdownhill : 3;
  [south] southenabled & southdownhill & !southuphill : 1;
  [south] southenabled & !southuphill & !southdownhill : 2;

  [west] westenabled & westuphill & !westdownhill : 3;
  [west] westenabled & westdownhill & !westuphill : 1;
  [west] westenabled & !westuphill & !westdownhill : 2;
endrewards


// Labels
label "goal" = goal;
