pomdp

// Constants that should technically be changeable (changeability of N might depend on map description)
const int N = 5;
const double slippery = 0.5;

// General stuff
const int xMIN = 0;
const int xMAX = N-1;
const int yMIN = 0;
const int yMAX = N-1;

// Enabledness of directions
formula northenabled = y != yMAX;
formula eastenabled = x != xMAX;
formula southenabled = y != yMIN;
formula westenabled = x != xMIN;

// Location of goal
formula goal = (x = xMAX) & (y = floor((N-1)/2));


// Uphill / downhill formulas
// Can be changed to model different "maps"
// This is map 1 (forest in middle, bush around, grass outer circle)
// Note: this map is made for N=5 and is not scalable as-is

formula northgrass = !northbush & !northforest;
formula northbush = (x > 0) & (x < 4) & (y < 3) & !northforest;
formula northforest = (x = 2) & (y = 1);

formula eastgrass = !eastbush & !eastforest;
formula eastbush = (x < 3) & (y > 0) & (y < 4) & !eastforest;
formula eastforest = (x = 1) & (y = 2);

formula southgrass = !southbush & !southforest;
formula southbush = (x > 0) & (x < 4) & (y > 1) & !southforest;
formula southforest = (x = 2) & (y = 3);

formula westgrass = !westbush & !westforest;
formula westbush = (x > 1) & (y > 0) & (y < 4) & !westforest;
formula westforest = (x = 3) & (y = 2);


// Observables
observable "done" = goal;

observable "cangonorth" = northenabled;
observable "cangoeast" = eastenabled;
observable "cangosouth" = southenabled;
observable "cangowest" = westenabled;

module walker
  x : [xMIN..xMAX] init xMIN; // x coordinate, min is west, max is east
  y : [yMIN..yMAX] init floor((N-1)/2); // y coordinate, min is south, max is north

  // Moving around (uphill: chance to stay in place, downhill: chance to slip too far)

  [north] northenabled & northbush & !northforest -> slippery*slippery: (y'=y) + (1-slippery*slippery): (y'=min(y+1, yMAX));
  [north] northenabled & northforest & !northbush -> slippery: (y'=y) + (1-slippery): (y'=min(y+1, yMAX));
  [north] northenabled & northgrass -> 1: (y'=min(y+1, yMAX));

  [east] eastenabled & eastbush & !eastforest -> slippery*slippery: (x'=x) + (1-slippery*slippery): (x'=min(x+1, xMAX));
  [east] eastenabled & eastforest & !eastbush -> slippery: (x'=x) + (1-slippery): (x'=min(x+1, xMAX));
  [east] eastenabled & eastgrass -> 1: (x'=min(x+1, xMAX));

  [south] southenabled & southbush & !southforest -> slippery*slippery: (y'=y) + (1-slippery*slippery): (y'=max(y-1, yMIN));
  [south] southenabled & southforest & !southbush -> slippery: (y'=y) + (1-slippery): (y'=max(y-1, yMIN));
  [south] southenabled & southgrass -> 1: (y'=max(y-1, yMIN));

  [west] westenabled & westbush & !westforest -> slippery*slippery: (x'=x) + (1-slippery*slippery): (x'=max(x-1, xMIN));
  [west] westenabled & westforest & !westbush -> slippery: (x'=x) + (1-slippery): (x'=max(x-1, xMIN));
  [west] westenabled & westgrass -> 1: (x'=max(x-1, xMIN));

endmodule


// Rewards

rewards "steps"
  [north] true : 1;
  [east] true : 1;
  [south] true : 1;
  [west] true : 1;
endrewards

rewards "energy"
  [north] northenabled & northbush & !northforest : 2;
  [north] northenabled & northforest & !northbush : 3;
  [north] northenabled & northgrass : 1;

  [east] eastenabled & eastbush & !eastforest : 2;
  [east] eastenabled & eastforest & !eastbush : 3;
  [east] eastenabled & eastgrass : 1;

  [south] southenabled & southbush & !southforest : 2;
  [south] southenabled & southforest & !southbush : 3;
  [south] southenabled & southgrass : 1;

  [west] westenabled & westbush & !westforest : 2;
  [west] westenabled & westforest & !westbush : 3;
  [west] westenabled & westgrass : 1;

endrewards


// Labels
label "goal" = goal;
